{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"numP",
				"qNumberPresentations"
			],
			[
				"qNu",
				"qNumberPresentations"
			],
			[
				"qF",
				"qFmt"
			],
			[
				"dataP",
				"dataPoints"
			],
			[
				"qT",
				"qThou"
			],
			[
				"qN",
				"qNumberPresentations"
			],
			[
				"qLis",
				"qListObjectDef"
			],
			[
				"qL",
				"qListObjectDef"
			],
			[
				"inn",
				"innerHeight"
			],
			[
				"sym",
				"symbols"
			],
			[
				"min",
				"minDate"
			],
			[
				"l",
				"length"
			],
			[
				"qMa",
				"qMatrixDate"
			],
			[
				"le",
				"left"
			],
			[
				"segm",
				"segmentArea"
			],
			[
				"se",
				"segmentArea"
			],
			[
				"ac",
				"activeMeasureColor"
			],
			[
				"seg",
				"segmentData"
			],
			[
				"inner",
				"innerHeight"
			],
			[
				"for",
				"forEach"
			],
			[
				"sele",
				"selectionArray"
			],
			[
				"brus",
				"brushstart"
			],
			[
				"to",
				"toogleArray"
			],
			[
				"too",
				"toogleArray"
			],
			[
				"selec",
				"selectionMode"
			],
			[
				"sing",
				"singlePoint"
			],
			[
				"single",
				"singlepoint"
			],
			[
				"one",
				"onePoint"
			],
			[
				"tran",
				"transition"
			],
			[
				"hig",
				"highlightedPoint0"
			],
			[
				"highlighted",
				"highlightedPoint"
			],
			[
				"hi",
				"highlightPoint"
			],
			[
				"higl",
				"highlighted"
			],
			[
				"forma",
				"formatPercent"
			],
			[
				"la",
				"labelsToShow"
			],
			[
				"ar",
				"arguments"
			],
			[
				"lab",
				"labelsToShow"
			],
			[
				"rot",
				"rotateXLabels"
			],
			[
				"num",
				"numDays"
			],
			[
				"ro",
				"rotateXLabels"
			],
			[
				"con",
				"container"
			],
			[
				"Get",
				"getOffset"
			],
			[
				"bo",
				"body"
			],
			[
				"off",
				"offsetTop"
			],
			[
				"clas",
				"classed"
			],
			[
				"strok",
				"stroke-opacity"
			],
			[
				"brush",
				"brushend"
			],
			[
				"mouse",
				"mouseout"
			],
			[
				"arr",
				"arraysEqual"
			],
			[
				"sel",
				"selectionArray"
			],
			[
				"q",
				"qElemNumbers"
			],
			[
				"sh",
				"showLegend"
			],
			[
				"mo",
				"mouseover"
			],
			[
				"segmen",
				"segmentData"
			],
			[
				"fo",
				"for	for (…) {…} (Improved Native For-Loop)"
			],
			[
				"diff",
				"diffColor"
			],
			[
				"obe",
				"object"
			],
			[
				"up",
				"updateActiveMeasure"
			],
			[
				"sho",
				"showDots"
			],
			[
				"clip",
				"clipPath"
			],
			[
				"compare",
				"comparechart"
			],
			[
				"com",
				"comparechart"
			],
			[
				"show",
				"showLegend"
			],
			[
				"element",
				"elementMousemove"
			],
			[
				"tick",
				"tickFormat"
			],
			[
				"poi",
				"pointSize"
			],
			[
				"ser",
				"seriesData"
			],
			[
				"er",
				"errors"
			],
			[
				"max",
				"maxDate"
			],
			[
				"possi",
				"possibleDates"
			],
			[
				"dim",
				"dimBuckets"
			],
			[
				"missi",
				"missingValues"
			],
			[
				"miss",
				"missingValues"
			],
			[
				"mi",
				"missingValues"
			],
			[
				"qDe",
				"qDef"
			],
			[
				"tool",
				"tooltypHtml"
			],
			[
				"val",
				"values"
			],
			[
				"KFMe",
				"kfMeasureLabel"
			],
			[
				"new",
				"newData"
			],
			[
				"parse",
				"parseDate"
			],
			[
				"date",
				"dateScale"
			],
			[
				"qSo",
				"qSortCriterias"
			],
			[
				"qSor",
				"qSortByNumeric"
			],
			[
				"qD",
				"qDimensions"
			],
			[
				"comp",
				"comparePeriod"
			],
			[
				"ql",
				"qListObjectDef"
			],
			[
				"dime",
				"dimension"
			],
			[
				"kfMe",
				"kfMeasureLabel"
			],
			[
				"cl",
				"clearSelectedValues"
			],
			[
				"upd",
				"updateDefaultModifiers"
			],
			[
				"da",
				"data"
			],
			[
				"qH",
				"qHyperCube"
			],
			[
				"qNum",
				"qNumFormat"
			],
			[
				"kfMod",
				"kfModifierList"
			],
			[
				"dateF",
				"dateFieldEqualsDim"
			],
			[
				"qLi",
				"qListObjectDef"
			],
			[
				"kfDateFi",
				"kfDateFieldList"
			],
			[
				"kfD",
				"kfDateFieldList"
			],
			[
				"list",
				"listId"
			],
			[
				"update",
				"updateDateField"
			],
			[
				"shif",
				"shiftDateBy"
			],
			[
				"kfMo",
				"kfModifierList"
			],
			[
				"range",
				"rangeFrom"
			],
			[
				"kfm",
				"kfMeasureList"
			],
			[
				"re",
				"reply"
			],
			[
				"co",
				"console"
			],
			[
				"period",
				"periodLength"
			],
			[
				"kfDa",
				"kfDateField"
			],
			[
				"qI",
				"qId"
			],
			[
				"defaul",
				"defaultValue"
			],
			[
				"def",
				"defaultValue"
			],
			[
				"ran",
				"rangeFrom"
			],
			[
				"kfFi",
				"kfFilterSetList"
			],
			[
				"defa",
				"defaultValue"
			],
			[
				"kfMeasure",
				"kfMeasureList"
			],
			[
				"kfModifier",
				"kfModifierList"
			],
			[
				"kfME",
				"kfMeasureList"
			],
			[
				"kfMeas",
				"kfMeasure"
			],
			[
				"filterS",
				"filterSetExpression"
			],
			[
				"kfFil",
				"kfFilterSetList"
			],
			[
				"kfF",
				"kfFilterSet"
			],
			[
				"filterSet",
				"kfFilterSetExpression"
			],
			[
				"kf",
				"kfMeasuresType"
			],
			[
				"Ad",
				"Advanced"
			],
			[
				"kfModi",
				"kfModifierHide"
			],
			[
				"colu",
				"kfColumnExp"
			],
			[
				"col",
				"columnExpString"
			],
			[
				"column",
				"columnsNum"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "numberFormatting: {\n							type: \"items\",\n							items: {\n								numberFormattingType: {\n									type: \"string\",\n									component: \"dropdown\",\n									ref: \"qDef.qNumberPresentations.qType\",\n									translation: \"properties.numberFormatting\",\n									defaultValue: \"U\",\n									options: [{\n										value: \"U\",\n										translation: \"Common.Auto\"\n									}, {\n										value: \"F\",\n										translation: \"properties.numberFormatting.types.number\"\n									}, {\n										value: \"M\",\n										translation: \"properties.numberFormatting.types.money\"\n									}, {\n										value: \"D\",\n										translation: \"properties.numberFormatting.types.date\"\n									}, {\n										value: \"IV\",\n										translation: \"properties.numberFormatting.types.duration\"\n									}, {\n										value: \"R\",\n										translation: \"Common.Custom\"\n									}],\n									change: function(a, b, d, e) {\n										console.log(a);\n										numFormatting.setNumFmtPattern(\"qType\", a.qDef.qNumberPresentations, e.localeInfo)\n									}\n								},\n								numberFormattingMode: {\n									type: \"boolean\",\n									component: \"switch\",\n									ref: \"qDef.numFormatFromTemplate\",\n									translation: \"properties.numberFormatting.formatting\",\n									defaultValue: !0,\n									options: [{\n										value: !0,\n										translation: \"properties.numberFormatting.simple\"\n									}, {\n										value: !1,\n										translation: \"Common.Custom\"\n									}],\n									show: function(b) {\n										return [\"F\", \"D\", \"TS\", \"T\"].contains(pResolver.getValue(b, \"qDef.qNumberPresentations.qType\"))\n									}\n								},\n								numberFormattingTemplates: {\n									type: \"string\",\n									component: \"number-formatter-dropdown\",\n									ref: \"qDef.qNumberPresentations.qFmt\",\n									defaultValue: \"#,##0\",\n									show: function(b) {\n										var c = pResolver.getValue(b, \"qDef.qNumberPresentations.qType\");\n										return [\"F\", \"D\", \"TS\", \"T\"].contains(c) && pResolver.getValue(b, \"numFormatFromTemplate\", !0) === !0\n									},\n									filter: function(b) {\n										return [pResolver.getValue(b, \"qDef.qNumberPresentations.qType\", \"F\")]\n									}\n								},\n								numDecimals: {\n									type: \"integer\",\n									ref: \"qDef.qNumberPresentations.qnDec\",\n									translation: \"properties.numberFormatting.nDec\",\n									defaultValue: 2,\n									min: 0,\n									max: 14,\n									show: !1\n								},\n								numPrecisionDigits: {\n									type: \"integer\",\n									ref: \"qDef.qNumberPresentations.qnDec\",\n									translation: \"properties.numberFormatting.significantFigures\",\n									defaultValue: 10,\n									min: 1,\n									max: 14,\n									show: !1\n								},\n								decimalSep: {\n									type: \"string\",\n									ref: \"qDef.qNumberPresentations.qDec\",\n									translation: \"properties.numberFormatting.dec\",\n									defaultValue: \".\",\n									show: function(b) {\n										var c = pResolver.getValue(b, \"qDef.qNumberPresentations.qType\");\n										return \"R\" === c\n									},\n									change: function(a, b, d, e) {\n										numFormatting.setNumFmtPattern(\"qDec\", pResolver.qDef.qNumberPresentations, e.localeInfo)\n									},\n									invalid: function(b) {\n										return pResolver.getValue(b, \"qDef.qNumberPresentations.qDec\") === pResolver.getValue(b, \"qDef.qNumberPresentations.qThou\")\n									},\n									readOnly: function(a, b, c, d) {\n										return !k(a, d)\n									}\n								},\n								thousandSep: {\n									type: \"string\",\n									ref: \"qDef.qNumberPresentations.qThou\",\n									translation: \"properties.numberFormatting.thousandSeparator\",\n									defaultValue: \"\",\n									show: function(b) {\n										var c = pResolver.getValue(b, \"qDef.qNumberPresentations.qType\");\n										return \"R\" === c\n									},\n									change: function(a, b, d, e) {\n										numFormatting.setNumFmtPattern(\"qThou\", pResolver.qDef.qNumberPresentations, e.localeInfo)\n									},\n									invalid: function(b) {\n										var c = pResolver.getValue(b, \"qDef.qNumberPresentations.qType\");\n										return \"I\" === c ? !1 : pResolver.getValue(b, \"qDef.qNumberPresentations.qDec\") === pResolver.getValue(b, \"qDef.qNumberPresentations.qThou\")\n									},\n									readOnly: function(a, b, c, d) {\n										return !k(a, d)\n									}\n								},\n								format: {\n									type: \"string\",\n									component: \"number-formatter\",\n									ref: \"qDef.qNumberPresentations.qFmt\",\n									resetTranslation: \"properties.numberFormatting.resetPattern\",\n									translation: \"properties.numberFormatting.formatPattern\",\n									defaultValue: \"\",\n									show: function(a) {\n										return n(a)\n									},\n									invalid: function(a, b, c) {\n										if ([\"D\", \"T\", \"TS\", \"IV\"].contains(a.qDef.qNumberPresentations.qType)) return !1;\n										var d = \"R\" === a.qDef.qNumberPresentations.qType ? a.qDef.qNumberPresentations.qDec : c.localeInfo[\"q\" + (\"M\" === a.qDef.qNumberPresentations.qType ? \"Money\" : \"\") + \"DecimalSep\"],\n											e = new RegExp(\"(0|#)\" + util.escapeRegExp(d) + \"0*#*\"),\n											f = (a.qDef.qNumberPresentations.qFmt || \"\").split(\";\"),\n											h = f[0].match(e),\n											i = h && h[0] ? h[0].length - 2 : 0,\n											j = f[1] ? f[1].match(e) : null,\n											k = j && j[0] ? j[0].length - 2 : 0;\n										return i > 15 || k > 15\n									}\n								}\n							}\n						}",
			"settings":
			{
				"buffer_size": 5327,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "//TODO \n//Remove animations for area and line\n//Y-Axis\n//Cleanup code\nfunction compareChart() {\n\n	var lines = line();\n	var legend = kf_legend();\n	var yAxis = y_axis();\n	var xAxis = x_date_axis();\n\n\n	var margin = {\n			top: 50,\n			right: 20,\n			bottom: 70,\n			left: 90\n		},\n		width,\n		height,\n		id,\n		labels,\n		layout,\n		that,\n		singlePoint;\n	inEditMode = true;\n\n\n	var selectionArray = [];\n	var selectionArray0 = [];\n\n	var xValue = function(d) {\n		return d.x;\n	}\n	var yValue = function(d) {\n		return d.y;\n	}\n	var sizeValue = function(d) {\n		return d.size || 0.1\n	}\n	var isArea = function(d) {\n		return d.area\n	}\n	var isDisabled = function(d) {\n		return d.disabled\n	}\n	var getKey = function(d) {\n		return d.key;\n	}\n\n	var defsid = Math.floor(Math.random() * 100000);\n\n	var symbols = {};\n\n	var transitionDuration = 250\n\n	var interpolate = \"linear\"\n\n	var highlightedPoint = highlightedPoint0 = -1\n\n	var showLegend = true\n	var showYAxis = true\n	var showGridLines = false\n	var showXAxis = true\n	var selectionMode = false\n\n	yAxis.orient('left');\n	xAxis.orient('bottom');\n\n	var x = d3.time.scale(),\n		y = d3.scale.linear();\n	var x0, y0;\n\n	var state = {},\n		defaultState = null,\n		dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange', 'changeState');\n\n\n	var offsetX = 60,\n		offsetY = 60;\n\n	var parseDate = d3.time.format(\"%Y-%m-%d\").parse,\n		formatTime = d3.time.format(\"%e %B\"),\n		formatDate = d3.time.format(\"%A %Y-%m-%d\"),\n		formatValue = d3.format(\"s\"),\n		formatPercent = d3.format(\",.1%\");\n\n	function chart(selection) {\n		selection.each(function(data) {\n\n			singlePoint = data[0].values.length == 1;\n\n			var container = d3.select(this),\n				me = this;\n\n			var labelsPer100Px = (width || parseInt(container.style('width')) || 960) / (data[0].values.length * 100)\n			var rotateXLabels = 1 > labelsPer100Px;\n\n			if (rotateXLabels) {\n				margin = {\n					top: 50,\n					right: 20,\n					bottom: 80,\n					left: 90\n				}\n			} else {\n				margin = {\n					top: 50,\n					right: 20,\n					bottom: 40,\n					left: 90\n				}\n			}\n\n			var innerWidth = (width || parseInt(container.style('width')) || 960) - margin.left - margin.right,\n				innerHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n\n			chart.update = function() {\n				container.transition().duration(transitionDuration).call(chart)\n			};\n			chart.container = this;\n\n			state.disabled = data.map(function(d) {\n				return !!d.disabled\n			});\n\n\n			if (!defaultState) {\n				var key;\n				defaultState = {};\n				for (key in state) {\n					if (state[key] instanceof Array)\n						defaultState[key] = state[key].slice(0);\n					else\n						defaultState[key] = state[key];\n				}\n			}\n\n			x\n				.range([0, innerWidth]);\n\n			y\n				.range([innerHeight, 0]);\n\n			//tooltip\n			var tooltipData = inEditMode ? [] : [data];\n\n			var tooltip = d3.select(\"body\").selectAll(\"div.kf-tooltip\").data(tooltipData)\n			tooltip.enter().append('div')\n				.attr(\"class\", \"kf-tooltip\")\n				.style(\"opacity\", 0);\n\n			tooltip.exit().remove();\n\n\n			var tooltipOffsetX = d3.scale.threshold()\n				.domain([innerWidth / 2])\n				.range([offsetX, -offsetX]);\n\n			var tooltipOffsetY = d3.scale.threshold()\n				.domain([innerHeight / 2])\n				.range([offsetY, -offsetY]);\n\n			var tooltipPadding = 10;\n\n			var activeMeasure = null;\n			var activeMeasureIdx = 0;\n\n			data.forEach(function(series, i) {\n				if (!series.disabled && !series.comparePeriod) {\n\n					activeMeasure = series.key\n					activeMeasureIdx = i\n				}\n			});\n\n			rotateXLabels ? xAxis.rotateLabels(-45) : xAxis.rotateLabels(0);\n\n			yAxis.axisLabel(activeMeasure);\n			xAxis.axisLabel(labels[0]);\n\n			var wrap = container.selectAll('g.kf-wrap.kf-lineChart').data([data]);\n			var gEnter = wrap.enter().append('g').attr('class', 'kfd3 kf-wrap kf-lineChart').append('g');\n			var g = wrap.select('g');\n\n			gEnter.append(\"rect\").style(\"opacity\", 0);\n\n			gEnter.append('g').attr('class', 'kf-x kf-axis');\n			gEnter.append('g').attr('class', 'kf-y kf-axis');\n			gEnter.append('g').attr('class', 'kf-linesWrap');\n			gEnter.append('g').attr('class', 'kf-legendWrap');\n			gEnter.append('g').attr('class', 'kf-overlay');\n\n\n\n			if (showLegend) {\n\n				legend.width(innerWidth);\n\n				g.select('.kf-legendWrap')\n					.datum(data)\n					.call(legend);\n\n				wrap.select('.kf-legendWrap')\n					.attr('transform', 'translate(0,' + (-margin.top) + ')')\n\n			} else {\n				g.select('.kf-legendWrap')\n					.datum([])\n					.call(legend);\n			}\n\n			g.select(\"rect\")\n				.attr(\"width\", innerWidth)\n				.attr(\"height\", (innerHeight > 0) ? innerHeight : 0);\n\n			wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n			var seriesData = d3.merge(data.map(function(d) {\n				return d.values.map(function(d, i) {\n					return {\n						x: xValue(d, i),\n						y: yValue(d, i),\n						size: sizeValue(d, i)\n					}\n				})\n			}));\n\n			x = lines.xScale();\n			y = lines.yScale();\n\n			data.forEach(function(series, i) {\n				series.values.forEach(function(point) {\n					point.series = i;\n				});\n			});\n\n			lines\n				.width(innerWidth)\n				.height(innerHeight);\n\n\n			var linesWrap = g.select('.kf-linesWrap')\n				.datum(data.filter(function(d) {\n					return !d.disabled\n				}))\n\n			linesWrap.transition().call(lines);\n\n			var format = d3.time.format(\"%Y-%m-%d\")\n			if (showXAxis) {\n\n				var pxPerLabels = rotateXLabels ? 30 : 100;\n				var labelsToShow = Math.min(Math.ceil(innerWidth / pxPerLabels), data[0].values.length);\n\n				xAxis\n					.scale(x)\n					.tickFormat(format)\n					.tickSize(0)\n					.tickPadding(8);\n\n				xAxis.ticks(function(start, end) {\n					start = d3.time.hour.offset(start, 12);\n					end = d3.time.hour.offset(end, -12)\n					var result = [start];\n					if (labelsToShow > 1) {\n						for (var i = 0; i <= labelsToShow - 1; i++) {\n							result.push(new Date(start.getTime() + ((end.getTime() - start.getTime()) / (labelsToShow - 1)) * i))\n						}\n					}\n					return result;\n				});\n\n				g.select('.kf-x.kf-axis')\n					.attr('transform', 'translate(0,' + y.range()[0] + ')');\n				g.select('.kf-x.kf-axis')\n					.transition()\n					.call(xAxis);\n\n				if (!showGridLines) {\n					g.selectAll('.kf-x.kf-axis .tick')\n						.style('stroke-opacity', 0);\n				}\n\n			}\n\n			if (showYAxis) {\n\n				/*\n\n				var formatValue = function(d) {\n\n					var thousands = Math.floor(d / 1000),\n						millions = Math.floor(d / 1000000),\n						billions = Math.floor(d / 1000000000)\n\n					var output = d;\n\n					if (billions && symbols.billions) {\n						output = billions + ' ' + symbols.billions;\n					} else if (millions && symbols.millions) {\n						output = millions + ' ' + symbols.millions;\n					} else if (thousands && symbols.thousands) {\n						output = thousands + ' ' + symbols.thousands;\n					} else if (symbols.symbol) {\n						output = output + ' ' + symbols.symbol;\n					}\n					return output;\n				};\n\n\n*/\n\n				console.log(\"yAxis\");\n				console.log(innerHeight);\n\n				yAxis\n					.scale(y)\n					.ticks(8)\n					.tickFormat(formatValue)\n					.tickSize(-innerWidth, 0);\n\n				g.select('.kf-y.kf-axis')\n					.transition()\n					.call(yAxis);\n\n				if (!showGridLines) {\n					g.selectAll('.kf-y.kf-axis .tick')\n						.style('stroke-opacity', 0);\n				}\n			}\n\n			var bisectDate = d3.bisector(function(d) {\n				return d.x;\n			}).left;\n\n			var innerOverlay = wrap.select(\".kf-overlay\").selectAll(\"rect\").data([data])\n\n			innerOverlay.enter().append('rect')\n				.attr(\"class\", \"kf-overlay\")\n				.attr(\"width\", innerWidth)\n				.attr(\"height\", innerHeight)\n				.on(\"mouseover\", function() {\n					tooltip.transition()\n						.style('opacity', .9);\n				})\n				.on(\"mouseout\", function() {\n					tooltip.transition()\n						.style('opacity', 0);\n					clearHighlights(id, singlePoint);\n					highlightedPoint = highlightedPoint0 = -1;\n				})\n				.on(\"mousemove\", mousemove);\n\n			var xAxisHeight = rotateXLabels ? 62 : 22;\n\n			var brush = d3.svg.brush()\n				.x(x)\n				.on(\"brushstart\", brushstart)\n				.on(\"brush\", brushmove)\n				.on(\"brushend\", brushend);\n\n			var brushg = wrap.append(\"g\")\n				.attr(\"class\", \"brush\")\n				.attr(\"height\", height)\n				.call(brush);\n\n			brushg.selectAll(\"rect.background\")\n				.attr(\"height\", xAxisHeight)\n				.style(\"cursor\", \"default\")\n				.attr(\"transform\", 'translate(0,' + innerHeight + ')');\n\n			brushg.selectAll(\"rect.extent\")\n				.style(\"cursor\", \"default\")\n				.attr(\"height\", xAxisHeight)\n				.attr('transform', 'translate(0, ' + innerHeight + ')')\n				.on(\"mouseover\", function() {\n					d3.select(this)\n						.classed('hover', true);\n				})\n				.on(\"mouseout\", function() {\n					d3.select(this)\n						.classed('hover', false);\n				});\n			brushg.selectAll(\".resize\").append(\"line\")\n				.attr(\"transform\", \"translate(0,\" + 0 + \")\")\n				.attr('x1', 0)\n				.attr('x2', 0)\n				.attr('y1', 0)\n				.attr('y2', innerHeight + xAxisHeight)\n\n			brushg.selectAll(\".resize\").selectAll(\"rect\")\n				.attr(\"height\", innerHeight)\n				.attr(\"width\", '20px')\n				.on(\"mouseover\", function() {\n					d3.select(this.parentNode).selectAll(\"line\")\n						.classed('hover', true);\n				})\n				.on(\"mouseout\", function() {\n					d3.select(this.parentNode).selectAll(\"line\")\n						.classed('hover', false);\n				});\n\n			var format = d3.time.format(\"%Y-%m-%d\");\n			var s = brush.extent();\n\n\n			brushg.selectAll(\".resize\").append(\"rect\")\n				.attr(\"x\", -48)\n				.attr(\"y\", -25)\n				.attr(\"height\", 25)\n				.attr(\"width\", 90)\n				.attr(\"rx\", 6)\n				.attr(\"ry\", 6)\n				.style(\"stroke\", \"grey\")\n				.style(\"fill\", \"white\")\n				.style(\"stroke-width\", '1px');\n\n\n			brushg.selectAll(\".resize.e\").append(\"text\")\n				.classed('resize-label', true)\n				.attr(\"x\", -40)\n				.attr(\"y\", -9)\n				.text(function() {\n					return format(s[1]) == format(s[0]) ? '' : format(s[1]);\n				});\n\n			brushg.selectAll(\".resize.w\").append(\"text\")\n				.classed('resize-label', true)\n				.attr(\"x\", -40)\n				.attr(\"y\", -9)\n				.text(function() {\n					return format(s[1]) == format(s[0]) ? '' : format(d3.time.day.offset(s[0], 1));\n				});\n\n\n			function brushstart() {\n				selectionMode = true;\n			}\n\n			function brushmove() {\n				var s = brush.extent();\n				var format = d3.time.format(\"%Y-%m-%d\");\n				var arr = [];\n\n				brushg.selectAll(\".resize.e text\")\n					.text(function() {\n						return format(s[1]) == format(s[0]) ? '' : format(s[1]);\n					});\n\n				brushg.selectAll(\".resize.w text\")\n					.text(function() {\n						return format(s[1]) == format(s[0]) ? '' : format(d3.time.day.offset(s[0], 1));\n					});\n\n\n				data[0].values.forEach(function(d) {\n					if (s[0] <= d.x && d.x <= s[1]) {\n						arr = arr.concat(d.qElemNumbers ? d.qElemNumbers : []);\n					}\n				});\n\n				if (arr.length > 0) {\n\n					var segment = wrap.selectAll('line');\n					segment.classed(\"selected\", function(d) {\n						return s[0] <= d.x1 && d.x2 <= s[1];\n					});\n\n					var segmentArea = wrap.selectAll('.kf-segmentarea');\n					segmentArea.classed(\"selected\", function(d) {\n						return s[0] <= d.values[0].x && d.values[1].x <= s[1];\n					});\n\n					var point = wrap.selectAll('.kf-point');\n					point.classed(\"selected\", function(d) {\n							return s[0] <= d.x && d.x <= s[1] && d.qElemNumbers;\n						})\n						.attr('r', function(d) {\n							return (s[0] <= d.x && d.x <= s[1] && d.qElemNumbers) ? 5 : d.size || 0.1;\n						});\n\n				}\n			}\n\n			function brushend() {\n\n				var self = that\n				var s = brush.extent();\n\n				data[0].values.forEach(function(d) {\n					if (s[0] <= d.x && d.x <= s[1]) {\n						selectionArray0 = selectionArray0.concat(d.qElemNumbers ? d.qElemNumbers : []);\n					}\n				});\n\n				if (!arraysEqual(selectionArray0, selectionArray)) {\n\n					if (selectionArray0.length > 0) {\n\n						var toogleArray = _.difference(selectionArray0, selectionArray).concat(_.difference(selectionArray, selectionArray0))\n\n						self.selectValues(0, toogleArray, true);\n						selectionArray = selectionArray0;\n						selectionArray0 = [];\n					}\n				}\n			}\n\n			function mousemove() {\n\n				if (!inEditMode && !selectionMode) {\n\n					var x0 = x.invert(d3.mouse(this)[0]),\n						i = bisectDate(data[0].values, x0, 1),\n						idx = 0;\n\n					if (i == data[0].values.length) {\n						i = data[0].values.length - 1\n					}\n\n					if (data[0].values.length > 1) {\n\n\n						var d0 = data[0].values[i - 1],\n							d1 = data[0].values[i];\n\n\n						idx = x0 - d0.x > d1.x - x0 ? i : i - 1;\n					}\n\n					highlightedPoint0 = highlightedPoint;\n					highlightedPoint = idx;\n\n					if (highlightedPoint != highlightedPoint0) {\n						clearHighlights(id, singlePoint);\n						highlightPoint(id, highlightedPoint, highlightedPoint0, singlePoint);\n					}\n					var formatValue = d3.format(\".0f\");\n\n					var tooltipHtml = ''\n\n					var diff = data[activeMeasureIdx].values[idx].y / data[activeMeasureIdx + 1].values[idx].y - 1;\n\n					var diffColor = 'style=\"color:rgb(0,0,0);\"' //black\n					var diffSymbol = ''\n\n					if (diff < 0) {\n						diffColor = 'style=\"color:rgb(255,0,0);\"' //red\n						diffSymbol = '&#x25bc' //down triangle\n						diff = formatPercent(diff);\n					}\n					if (diff > 0 && diff != Infinity) {\n						diffColor = 'style=\"color:rgb(0,255,0);\"' //green\n						diffSymbol = '&#x25b2' //up triangle\n						diff = formatPercent(diff);\n					} else {\n						diffSymbol = ''\n						diff = ''\n					}\n\n\n					tooltipHtml = '<table><thead><tr><td colspan=\"6\"><strong>' + data[activeMeasureIdx].values[idx].xText + '</strong></td></tr></thead>' +\n						'<tbody><tr><td class=\"tooltip-series-color\"><div style=\"background-color:rgb(' + hexToR(data[activeMeasureIdx].color) + ',' + hexToG(data[activeMeasureIdx].color) + ',' + hexToB(data[activeMeasureIdx].color) + ');\"></div></td><td>' + data[activeMeasureIdx].key + ': </td><td>' + data[activeMeasureIdx].values[idx].yText + '</td><td ' + diffColor + '><strong>' + diffSymbol + '</strong></td><td>' + diff + '</td></tr>' +\n						'<tr><td colspan=\"4\"><strong>' + data[activeMeasureIdx + 1].values[idx].xText + '</strong></td></tr>' +\n						'<tr><td class=\"tooltip-series-color\"><div style=\"background-color: rgb(' + hexToR(data[activeMeasureIdx + 1].color) + ',' + hexToG(data[activeMeasureIdx + 1].color) + ',' + hexToB(data[activeMeasureIdx + 1].color) + ');\"> </div></td><td>' + data[activeMeasureIdx].key + ': </td><td colspan=\"4\">' + data[activeMeasureIdx + 1].values[idx].yText + '</td></tr></tbody></table>'\n\n					var offsetBody = getCoords(that.$element[0]);\n					var tooltipWidth = parseInt(tooltip.style(\"width\"));\n					var tooltipHeight = parseInt(tooltip.style(\"height\"));\n					var tooltipX = x(data[activeMeasureIdx].values[idx].x) - tooltipWidth / 2 + 90 + offsetBody.left\n					var tooltipY = y(data[activeMeasureIdx].values[idx].y) - tooltipHeight / 2 - 10 + offsetBody.top;\n					tooltip.html(tooltipHtml)\n						.style(\"left\", tooltipX + \"px\")\n						.style(\"top\", tooltipY + \"px\");\n				}\n\n			}\n\n			x0 = x.copy();\n			y0 = y.copy();\n\n			legend.dispatch.on('stateChange', function(newState) {\n				state = newState;\n				dispatch.stateChange(state);\n				chart.update();\n			});\n\n\n			dispatch.on('changeState', function(e) {\n\n				if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n					data.forEach(function(series, i) {\n						series.disabled = e.disabled[i];\n					});\n					state.disabled = e.disabled;\n				}\n				chart.update();\n			});\n\n		});\n	}\n\n	chart.width = function(_) {\n		if (!arguments.length) return width;\n		width = _;\n		return chart;\n	};\n\n	chart.height = function(_) {\n		if (!arguments.length) return height;\n		height = _;\n		return chart;\n	};\n\n	chart.id = function(_) {\n		if (!arguments.length) return id;\n		id = _;\n		return chart;\n	};\n\n	chart.labels = function(_) {\n		if (!arguments.length) return labels;\n		labels = _;\n		return chart;\n	};\n\n	chart.layout = function(_) {\n		if (!arguments.length) return layout;\n		layout = _;\n		return chart;\n	};\n\n	chart.that = function(_) {\n		if (!arguments.length) return that;\n		that = _;\n		return chart;\n	};\n\n	chart.legend = function(_) {\n		if (!arguments.length) return legend;\n		legend = _;\n		return chart;\n	};\n	chart.showLegend = function(_) {\n		if (!arguments.length) return showLegend;\n		showLegend = _;\n		return chart;\n	};\n	chart.inEditMode = function(_) {\n		if (!arguments.length) return inEditMode;\n		inEditMode = _;\n		return chart;\n	};\n\n	chart.symbols = function(_) {\n		if (!arguments.length) return symbols;\n		symbols = _;\n		return chart;\n	};\n\n\n\n	return chart;\n}\n\nfunction y_axis() {\n\n	var axis = d3.svg.axis();\n\n	\"use strict\";\n	var margin = {\n			top: 0,\n			right: 0,\n			bottom: 0,\n			left: 0\n		},\n		width,\n		height,\n		scale = d3.scale.linear(),\n		axisLabelText = null;\n\n	var scale0;\n\n	function chart(selection) {\n		selection.each(function(data) {\n			var container = d3.select(this);\n\n			var wrap = container.selectAll('g.kf-wrap.kf-axis.kf-y').data([data]);\n			var wrapEnter = wrap.enter().append('g').attr('class', 'kf-wrap kf-axis kf-y');\n			var gEnter = wrapEnter.append('g');\n			var g = wrap.select('g');\n\n			g.transition().call(axis);\n\n			scale0 = scale0 || axis.scale();\n\n			var axisLabel = g.selectAll('text.kf-axislabel')\n				.data([axisLabelText || null]);\n			axisLabel.exit().remove();\n\n			axisLabel.enter().append('text').attr('class', 'kf-axislabel');\n			axisLabel\n				.attr(\"transform\", \"rotate(-90)\")\n				.attr(\"y\", -70)\n				.attr(\"x\", (-scale.range()[0] / 2))\n				.style(\"text-anchor\", \"middle\")\n				.text(function(d) {\n					return d\n				});\n		});\n\n		return chart;\n	};\n\n	chart.axis = axis;\n\n	d3.rebind(chart, axis, 'orient', 'ticks', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat');\n	d3.rebind(chart, scale, 'domain', 'range', 'rangeBand', 'rangeBands');\n\n	chart.margin = function(_) {\n		if (!arguments.length) return margin;\n		margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n		margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n		margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n		margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n		return chart;\n	}\n\n	chart.width = function(_) {\n		if (!arguments.length) return width;\n		width = _;\n		return chart;\n	};\n\n	chart.height = function(_) {\n		if (!arguments.length) return height;\n		height = _;\n		return chart;\n	};\n\n	chart.axisLabel = function(_) {\n		if (!arguments.length) return axisLabelText;\n		axisLabelText = _;\n		return chart;\n	}\n\n	chart.scale = function(_) {\n		if (!arguments.length) return scale;\n		scale = _;\n		axis.scale(scale);\n		isOrdinal = typeof scale.rangeBands === 'function';\n		d3.rebind(chart, scale, 'domain', 'range', 'rangeBand', 'rangeBands');\n		return chart;\n	}\n\n	return chart;\n};\n\nfunction x_date_axis() {\n\n	var axis = d3.svg.axis();\n\n	\"use strict\";\n	var margin = {\n			top: 0,\n			right: 0,\n			bottom: 0,\n			left: 0\n		},\n		width,\n		height,\n		rotateLabels = 0,\n		scale = d3.time.scale(),\n		axisLabelText = null;\n\n	var scale0;\n\n	function chart(selection) {\n		selection.each(function(data) {\n			var container = d3.select(this);\n\n			var wrap = container.selectAll('g.kf-wrap.kf-axis').data([data]);\n			var wrapEnter = wrap.enter().append('g').attr('class', 'kf-wrap kf-axis');\n			var gEnter = wrapEnter.append('g');\n			var g = wrap.select('g');\n\n			g.transition().call(axis);\n\n			scale0 = scale0 || axis.scale();\n\n			var axisLabel = g.selectAll('text.kf-axislabel')\n				.data([axisLabelText || null]);\n			axisLabel.exit().remove();\n\n			var xLabelMargin = 36;\n			var maxTextWidth = 30;\n			var xTicks = g.selectAll('g').select(\"text\");\n			if (rotateLabels % 360) {\n				xTicks.each(function(d, i) {\n					var width = this.getBBox().width;\n					if (width > maxTextWidth) maxTextWidth = width;\n				});\n				var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180));\n				var xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30;\n				xTicks\n					.attr('transform', function(d, i, j) {\n						return 'rotate(' + rotateLabels + ' 0,0)'\n					})\n					.style('text-anchor', rotateLabels % 360 > 0 ? 'start' : 'end');\n			}\n\n			var w = (scale.range().length == 2) ? scale.range()[1] : (scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]) / 2);\n\n			axisLabel.enter().append('text').attr('class', 'kf-axislabel');\n\n			axisLabel\n				.attr(\"y\", xLabelMargin)\n				.attr(\"x\", w / 2)\n				.style(\"text-anchor\", \"middle\")\n				.text(function(d) {\n					return d\n				});\n\n		});\n\n		return chart;\n	};\n\n	chart.axis = axis;\n\n	d3.rebind(chart, axis, 'orient', 'ticks', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat');\n	d3.rebind(chart, scale, 'domain', 'range', 'rangeBand', 'rangeBands');\n\n	chart.margin = function(_) {\n		if (!arguments.length) return margin;\n		margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n		margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n		margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n		margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n		return chart;\n	}\n\n	chart.width = function(_) {\n		if (!arguments.length) return width;\n		width = _;\n		return chart;\n	};\n\n\n	chart.height = function(_) {\n		if (!arguments.length) return height;\n		height = _;\n		return chart;\n	};\n\n	chart.axisLabel = function(_) {\n		if (!arguments.length) return axisLabelText;\n		axisLabelText = _;\n		return chart;\n	}\n\n	chart.rotateLabels = function(_) {\n		if (!arguments.length) return rotateLabels;\n		rotateLabels = _;\n		return chart;\n	}\n	chart.scale = function(_) {\n		if (!arguments.length) return scale;\n		scale = _;\n		axis.scale(scale);\n		isOrdinal = typeof scale.rangeBands === 'function';\n		d3.rebind(chart, scale, 'domain', 'range', 'rangeBand', 'rangeBands');\n		return chart;\n	}\n\n	return chart;\n};\n\n\nfunction line() {\n	\"use strict\";\n	var margin = {\n			top: 0,\n			right: 0,\n			bottom: 0,\n			left: 0\n		},\n		width = 760,\n		height = 220,\n		id = Math.floor(Math.random() * 10000),\n		xValue = function(d) {\n			return d.x;\n		},\n		yValue = function(d) {\n			return d.y;\n		},\n		sizeValue = function(d) {\n			return singlePoint ? 3 : d.size || 0.1\n		},\n		isArea = function(d) {\n			return d.area\n		},\n		/*\n		defined = function(d, i) {\n			return !isNaN(yValue(d, i)) && xValue(d, i) !== null\n		},*/\n		defined = function(d) {\n			return d.y != null;\n		},\n\n		xScale = d3.time.scale(),\n		yScale = d3.scale.linear(),\n		zScale = d3.scale.linear(),\n		xDomain = null,\n		yDomain = null,\n		xRange = null,\n		yRange = null,\n		singlePoint = false,\n		sizeDomain = null,\n		sizeRange = null,\n		padData = false,\n		padDataOuter = .1,\n		pointKey = null,\n		forceX = [],\n		forceY = [],\n		forceSize = [],\n		dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout'),\n		clipEdge = false,\n		state = {},\n		defaultState = null,\n		transitionDuration = 250,\n		interpolate = \"linear\";\n\n	var x0Scale,\n		y0Scale,\n		z0Scale,\n		forceZero = true,\n		yMargin = .05;\n\n	function chart(selection) {\n		selection.each(function(data) {\n\n			var innerWidth = width - margin.left - margin.right,\n				innerHeight = height - margin.top - margin.bottom,\n				container = d3.select(this);\n\n			data.forEach(function(series, i) {\n				series.values.forEach(function(point) {\n					point.series = i;\n				});\n			});\n\n			singlePoint = data[0].values.length == 1;\n\n			var seriesData = (xDomain && yDomain && sizeDomain) ? [] :\n				d3.merge(\n					data.map(function(d) {\n						return d.values.map(function(d, i) {\n							return {\n								x: xValue(d, i),\n								y: yValue(d, i),\n								size: sizeValue(d, i)\n							}\n						})\n					})\n				);\n\n			var padding = innerWidth / (data[0].values.length + 1) / 2\n\n			xScale.range([0, innerWidth]);\n\n			xScale.domain([d3.min(data[0].values.map(function(d) {\n				return d3.time.hour.offset(d.x, -12);\n			})), d3.max(data[0].values.map(function(d) {\n				return d3.time.hour.offset(d.x, 12);\n			}))]);\n\n			var yExtent = d3.extent(seriesData.map(function(d) {\n				return d.y\n			}));\n\n			//var yMarginOffset = (yExtent[1] - yExtent[0]) * yMargin\n\n			yScale.domain([d3.min(seriesData.map(function(d) {\n					return forceZero ? Math.min(0, d.y) : d.y;\n				})), d3.max(seriesData.map(function(d) {\n					return d.y\n				}))])\n				.range(yRange || [innerHeight, 0]);\n\n			zScale.domain(sizeDomain || d3.extent(seriesData.map(function(d) {\n					return d.size\n				}).concat(forceSize)))\n				.range(sizeRange || [16, 256]);\n\n			if (yScale.domain()[0] === yScale.domain()[1])\n				yScale.domain()[0] ?\n				yScale.domain([yScale.domain()[0] - yScale.domain()[0] * 0.01, yScale.domain()[1] + yScale.domain()[1] * 0.01]) : yScale.domain([-1, 1]);\n\n			if (isNaN(xScale.domain()[0])) {\n				xScale.domain([-1, 1]);\n			}\n\n			if (isNaN(yScale.domain()[0])) {\n				yScale.domain([-1, 1]);\n			}\n\n			yScale.nice();\n\n			x0Scale = x0Scale || xScale;\n			y0Scale = y0Scale || yScale;\n			z0Scale = z0Scale || zScale;\n\n			var wrap = container.selectAll('g.kf-wrap.kf-line').data([data]);\n			var wrapEnter = wrap.enter().append('g').attr('class', 'kfd3 kf-wrap kf-line');\n			var defsEnter = wrapEnter.append('defs');\n			var gEnter = wrapEnter.append('g');\n			var g = wrap.select('g');\n\n			gEnter.append('g').attr('class', 'kf-segmentareagroups');\n\n			gEnter.append('g').attr('class', 'kf-groups');\n			gEnter.append('g').attr('class', 'kf-segmentgroups');\n\n			gEnter.append('g').attr('class', 'kf-pointgroups');\n\n			wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n			defsEnter.append('clipPath')\n				.attr('id', 'kf-edge-clip-' + id)\n				.append('rect');\n\n			wrap.select('#kf-edge-clip-' + id + ' rect')\n				.attr('width', innerWidth)\n				.attr('height', (innerHeight > 0) ? innerHeight : 0);\n\n			g.attr('clip-path', clipEdge ? 'url(#kf-edge-clip-' + id + ')' : '');\n\n\n			var groups = wrap.select('.kf-groups').selectAll('.kf-group')\n				.data(function(d) {\n					return d\n				}, function(d) {\n					return d.key\n				});\n			groups.enter().append('g')\n				.style('stroke-opacity', 1e-6)\n				.style('fill-opacity', 1e-6);\n\n			groups.exit().remove();\n\n			groups\n				.attr('class', function(d, i) {\n					return 'kf-group seriesnr' + i\n				})\n				.classed('hover', function(d) {\n					return d.hover\n				})\n				.style('fill', function(d, i) {\n					return d.color\n				})\n				.style('stroke', function(d, i) {\n					return d.color\n				});\n			groups\n				.transition()\n				.style('stroke-opacity', 1)\n				.style('fill-opacity', .5);\n\n\n\n			var area = groups.selectAll('path.kf-area')\n				.data(function(d) {\n					return isArea(d) ? [d] : []\n				});\n			area.enter().append('path')\n				.attr('class', 'kf-area')\n				.attr('d', function(d) {\n					return d3.svg.area()\n						.defined(defined)\n						.x(function(d, i) {\n							return NullToZero(x0Scale(xValue(d, i)))\n						})\n						.y1(function(d, i) {\n							return NullToZero(y0Scale(yValue(d, i)))\n						})\n						.y0(innerHeight)\n						.apply(this, [d.values])\n				});\n			groups.exit().selectAll('path.kf-area')\n				.remove();\n\n			area\n				.transition()\n				.attr('d', function(d) {\n					return d3.svg.area()\n						.defined(defined)\n						.x(function(d, i) {\n							return NullToZero(xScale(xValue(d, i)))\n						})\n						.y1(function(d, i) {\n							return NullToZero(yScale(yValue(d, i)))\n						})\n						.y0(innerHeight)\n						.apply(this, [d.values])\n				});\n\n			var line = groups.selectAll('path.kf-line')\n				.data(function(d) {\n					return [d.values]\n				});\n			line.enter().append('path')\n				.attr('class', 'kf-line')\n				.attr('d',\n					d3.svg.line()\n					.interpolate(interpolate)\n					.defined(defined)\n					.x(function(d, i) {\n						return NullToZero(x0Scale(xValue(d, i)))\n					})\n					.y(function(d, i) {\n						return NullToZero(y0Scale(yValue(d, i)))\n					})\n				);\n\n			line\n				.transition()\n				.attr('d',\n					d3.svg.line()\n					.interpolate(interpolate)\n					.defined(defined)\n					.x(function(d, i) {\n						return NullToZero(xScale(xValue(d, i)))\n					})\n					.y(function(d, i) {\n						return NullToZero(yScale(yValue(d, i)))\n					})\n				);\n\n			var activeMeasureIdx = 0;\n			var activeMeasureColor = null;\n\n			data.forEach(function(series, i) {\n				if (!series.disabled && !series.comparePeriod) {\n					activeMeasureIdx = i\n					activeMeasureColor = series.color\n				}\n			});\n\n\n			var segmentData = []\n			for (var i = 1; i <= data[activeMeasureIdx].values.length - 1; i++) {\n\n				if (yValue(data[activeMeasureIdx].values[i - 1], i - 1) != null && yValue(data[activeMeasureIdx].values[i], i) != null) {\n\n\n					segmentData.push({\n						'x1': xValue(data[activeMeasureIdx].values[i - 1], i - 1),\n						'x2': xValue(data[activeMeasureIdx].values[i], i),\n						'y1': yValue(data[activeMeasureIdx].values[i - 1], i - 1),\n						'y2': yValue(data[activeMeasureIdx].values[i], i),\n						'color': activeMeasureColor\n					});\n				}\n\n\n			};\n\n\n			var segments = wrap.select('.kf-segmentgroups').selectAll('line.kf-segment')\n				.data(segmentData);\n			segments.enter().append('line')\n				.style('stroke-opacity', 1)\n				.style('stroke', function(d, i) {\n					return d.color\n				})\n				.attr('x1', function(d, i) {\n					return NullToZero(x0Scale(d.x1))\n				})\n				.attr('x2', function(d, i) {\n					return NullToZero(x0Scale(d.x2))\n				})\n				.attr('y0', function(d, i) {\n					return innerHeight\n				})\n				.attr('y1', function(d, i) {\n					return NullToZero(y0Scale(d.y1))\n				})\n				.attr('y2', function(d, i) {\n					return NullToZero(y0Scale(d.y2))\n				});\n			segments.exit().remove();\n\n			/*\n\n			groups.exit().selectAll('line.kf-segment').transition()\n				.attr('x1', function(d, i) {\n					return NullToZero(xScale(d.x1))\n				})\n				.attr('x2', function(d, i) {\n					return NullToZero(xScale(d.x2))\n				})\n				.attr('y0', function(d, i) {\n					return innerHeight\n				})\n				.attr('y1', function(d, i) {\n					return NullToZero(yScale(d.y1))\n				})\n				.attr('y2', function(d, i) {\n					return NullToZero(yScale(d.y2))\n				})\n				.remove();\n				*/\n			segments.each(function(d, i) {\n				d3.select(this)\n					.classed('kf-segment', true)\n					.classed('kf-segment-' + i + '-' + (i + 1), true);\n			});\n			segments.transition()\n				.attr('x1', function(d, i) {\n					return NullToZero(xScale(d.x1))\n				})\n				.attr('x2', function(d, i) {\n					return NullToZero(xScale(d.x2))\n				})\n				.attr('y0', function(d, i) {\n					return innerHeight\n				})\n				.attr('y1', function(d, i) {\n					return NullToZero(yScale(d.y1))\n				})\n				.attr('y2', function(d, i) {\n					return NullToZero(yScale(d.y2))\n				});\n\n			var segmentAreaData = []\n			for (var i = 1; i <= data[activeMeasureIdx].values.length - 1; i++) {\n				var values = []\n\n				if (yValue(data[activeMeasureIdx].values[i - 1], i - 1) != null && yValue(data[activeMeasureIdx].values[i], i) != null) {\n\n\n					values.push({\n						'x': xValue(data[activeMeasureIdx].values[i - 1], i - 1),\n						'y': yValue(data[activeMeasureIdx].values[i - 1], i - 1)\n\n					}, {\n						'x': xValue(data[activeMeasureIdx].values[i], i),\n						'y': yValue(data[activeMeasureIdx].values[i], i)\n					});\n\n					segmentAreaData.push({\n						'color': activeMeasureColor,\n						'values': values\n					});\n				}\n\n			};\n\n\n			var segmentArea = wrap.select('.kf-segmentareagroups').selectAll('path.kf-segmentarea')\n				.data(segmentAreaData);\n			segmentArea.enter().append('path')\n				.style('fill', function(d, i) {\n					return d.color\n				}).attr('d', function(d) {\n					return d3.svg.area()\n						.x(function(d, i) {\n							return NullToZero(x0Scale(d.x))\n						})\n						.y1(function(d, i) {\n							return NullToZero(y0Scale(d.y))\n						})\n						.y0(innerHeight)\n						.apply(this, [d.values])\n				});\n			segmentArea.exit().selectAll('path.kf-segmentarea')\n				.remove();\n\n			segmentArea.each(function(d, i) {\n				d3.select(this)\n					.classed('kf-segmentarea', true)\n					.classed('kf-segmentarea-' + i + '-' + (i + 1), true);\n			});\n\n			segmentArea\n				.transition()\n				.attr('d', function(d) {\n					return d3.svg.area()\n						.x(function(d, i) {\n							return NullToZero(xScale(d.x))\n						})\n						.y1(function(d, i) {\n							return NullToZero(yScale(d.y))\n						})\n						.y0(innerHeight)\n						.apply(this, [d.values])\n				});\n\n\n\n			var pointGroups = wrap.select('.kf-pointgroups').selectAll('.kf-pointgroup')\n				.data(function(d) {\n					return d\n				}, function(d) {\n					return d.key\n				});\n			pointGroups.enter().append('g')\n				.style('stroke-opacity', 1e-6)\n				.style('fill-opacity', 1e-6);\n\n			pointGroups.exit().remove();\n\n			pointGroups\n				.attr('class', function(d, i) {\n					return 'kf-pointgroup seriesnr' + i\n				})\n				.classed('hover', function(d) {\n					return d.hover\n				})\n				.style('fill', function(d, i) {\n					return d.color\n				})\n				.style('stroke', function(d, i) {\n					return d.color\n				});\n			pointGroups\n				.transition()\n				.style('stroke-opacity', 1)\n				.style('fill-opacity', 1);\n\n\n			var points = pointGroups.selectAll('circle.kf-point')\n				.data(function(d) {\n					return d.values\n				}, pointKey);\n			points.enter().append('circle')\n				.attr('class', 'kf-point')\n				.style('fill-opacity', 1)\n				.style('fill', function(d, i) {\n					return d.color\n				})\n				.style('stroke', function(d, i) {\n					return d.color\n				})\n				.attr('cx', function(d, i) {\n					return NullToZero(x0Scale(xValue(d, i)))\n				})\n				.attr('cy', function(d, i) {\n					return NullToZero(y0Scale(yValue(d, i)))\n				})\n				.attr('r', function(d, i) {\n					return sizeValue(d, i)\n				});\n			points.exit().remove();\n\n			pointGroups.exit().selectAll('circle.kf-point').transition()\n				.attr('cx', function(d, i) {\n					return NullToZero(xScale(xValue(d, i)))\n				})\n				.attr('cy', function(d, i) {\n					return NullToZero(yScale(yValue(d, i)))\n				})\n				.remove();\n			points.each(function(d, i) {\n				d3.select(this)\n					.classed('kf-point', true)\n					.classed('kf-point-' + i, true)\n					.classed('hover', false);\n			});\n			points.transition()\n				.attr('cx', function(d, i) {\n					return NullToZero(xScale(xValue(d, i)))\n				})\n				.attr('cy', function(d, i) {\n					return NullToZero(yScale(yValue(d, i)))\n				})\n				.attr('r', function(d, i) {\n					return sizeValue(d, i)\n				});\n\n			x0Scale = xScale.copy();\n			y0Scale = yScale.copy();\n			z0Scale = zScale.copy();\n\n		});\n\n		return chart;\n	}\n\n	chart.x = function(_) {\n		if (!arguments.length) return xValue;\n		xValue = d3.functor(_);\n		return chart;\n	};\n\n	chart.y = function(_) {\n		if (!arguments.length) return yValue;\n		yValue = d3.functor(_);\n		return chart;\n	};\n\n	chart.size = function(_) {\n		if (!arguments.length) return sizeValue;\n		sizeValue = d3.functor(_);\n		return chart;\n	};\n\n	chart.margin = function(_) {\n		if (!arguments.length) return margin;\n		margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n		margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n		margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n		margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n		return chart;\n	};\n\n	chart.width = function(_) {\n		if (!arguments.length) return width;\n		width = _;\n		return chart;\n	};\n\n	chart.height = function(_) {\n		if (!arguments.length) return height;\n		height = _;\n		return chart;\n	};\n\n	chart.xScale = function(_) {\n		if (!arguments.length) return xScale;\n		xScale = _;\n		return chart;\n	};\n\n	chart.yScale = function(_) {\n		if (!arguments.length) return yScale;\n		yScale = _;\n		return chart;\n	};\n\n	chart.zScale = function(_) {\n		if (!arguments.length) return zScale;\n		zScale = _;\n		return chart;\n	};\n\n	chart.xDomain = function(_) {\n		if (!arguments.length) return xDomain;\n		xDomain = _;\n		return chart;\n	};\n\n	chart.yDomain = function(_) {\n		if (!arguments.length) return yDomain;\n		yDomain = _;\n		return chart;\n	};\n\n	chart.sizeDomain = function(_) {\n		if (!arguments.length) return sizeDomain;\n		sizeDomain = _;\n		return chart;\n	};\n\n	chart.xRange = function(_) {\n		if (!arguments.length) return xRange;\n		xRange = _;\n		return chart;\n	};\n\n	chart.yRange = function(_) {\n		if (!arguments.length) return yRange;\n		yRange = _;\n		return chart;\n	};\n\n	chart.sizeRange = function(_) {\n		if (!arguments.length) return sizeRange;\n		sizeRange = _;\n		return chart;\n	};\n\n	chart.forceX = function(_) {\n		if (!arguments.length) return forceX;\n		forceX = _;\n		return chart;\n	};\n\n	chart.forceY = function(_) {\n		if (!arguments.length) return forceY;\n		forceY = _;\n		return chart;\n	};\n\n	chart.forceSize = function(_) {\n		if (!arguments.length) return forceSize;\n		forceSize = _;\n		return chart;\n	};\n\n	chart.pointKey = function(_) {\n		if (!arguments.length) return pointKey;\n		pointKey = _;\n		return chart;\n	};\n\n	chart.padData = function(_) {\n		if (!arguments.length) return padData;\n		padData = _;\n		return chart;\n	};\n\n	chart.padDataOuter = function(_) {\n		if (!arguments.length) return padDataOuter;\n		padDataOuter = _;\n		return chart;\n	};\n\n	chart.id = function(_) {\n		if (!arguments.length) return id;\n		id = _;\n		return chart;\n	};\n\n\n\n	return chart;\n};\n\nfunction kf_legend() {\n	\"use strict\";\n\n	var margin = {\n			top: 5,\n			right: 0,\n			bottom: 5,\n			left: 0\n		},\n		width = 400,\n		height = 20,\n		that,\n		isArea = function(d) {\n			return d.area\n		},\n		getKey = function(d) {\n			return d.key\n		},\n		updateState = true,\n\n		dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange');\n\n	function chart(selection) {\n		selection.each(function(data) {\n			var innerWidth = width - margin.left - margin.right,\n				container = d3.select(this);\n\n			var wrap = container.selectAll('g.kf-legend').data([data]);\n			var gEnter = wrap.enter().append('g').attr('class', 'kfd3 kf-legend').append('g');\n			var g = wrap.select('g');\n\n			wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n			var series = g.selectAll('.kf-series')\n				.data(data.filter(function(d) {\n					return !d.comparePeriod\n				}));\n			var seriesEnter = series.enter().append('g').attr('class', 'kf-series')\n				.on('click', function(d, i) {\n					dispatch.legendClick(d, i);\n					if (updateState) {\n\n						data.forEach(function(series, key) {\n							series.disabled = (i * 2 + 1 == key) ? false : true\n						});\n						d.disabled = false;\n\n						var me = that;\n\n						that.backendApi.getProperties().then(function(reply) {\n							reply.activeMeasure = i\n							me.backendApi.setProperties(reply);\n						});\n\n						dispatch.stateChange({\n							disabled: data.map(function(d) {\n								return !!d.disabled\n							})\n						});\n					}\n				});\n\n			seriesEnter.append('circle')\n				.style('stroke-width', 2)\n				.attr('class', 'kf-legend-symbol')\n				.attr('r', 5);\n			seriesEnter.append('text')\n				.attr('text-anchor', 'start')\n				.attr('class', 'kf-legend-text')\n				.attr('dy', '.32em')\n				.attr('dx', '8');\n			series.classed('disabled', function(d) {\n				return d.disabled\n			});\n			series.exit().remove();\n			series.select('circle')\n				.style('fill', function(d, i) {\n					return d.color\n				})\n				.style('stroke', function(d, i) {\n					return d.color\n				});\n			series.select('text').text(getKey);\n\n			var ypos = 5,\n				newxpos = 5,\n				maxwidth = 0,\n				xpos;\n			series\n				.attr('transform', function(d, i) {\n					var length = d3.select(this).select('text').node().getComputedTextLength() + 28;\n					xpos = newxpos;\n\n					if (width < margin.left + margin.right + xpos + length) {\n						newxpos = xpos = 5;\n						ypos += 20;\n					}\n\n					newxpos += length;\n					if (newxpos > maxwidth) maxwidth = newxpos;\n\n					return 'translate(' + xpos + ',' + ypos + ')';\n				});\n\n			g.attr('transform', 'translate(' + (innerWidth - margin.right - maxwidth) + ',' + margin.top + ')');\n\n			height = margin.top + margin.bottom + ypos + 15;\n\n\n		})\n\n		return chart;\n	}\n\n	chart.dispatch = dispatch;\n\n	chart.margin = function(_) {\n		if (!arguments.length) return margin;\n		margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n		margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n		margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n		margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n		return chart;\n	};\n\n	chart.width = function(_) {\n		if (!arguments.length) return width;\n		width = _;\n		return chart;\n	};\n\n	chart.height = function(_) {\n		if (!arguments.length) return height;\n		height = _;\n		return chart;\n	};\n\n	chart.key = function(_) {\n		if (!arguments.length) return getKey;\n		getKey = _;\n		return chart;\n	};\n\n	chart.updateState = function(_) {\n		if (!arguments.length) return updateState;\n		updateState = _;\n		return chart;\n	};\n\n	chart.that = function(_) {\n		if (!arguments.length) return that;\n		that = _;\n		return chart;\n	};\n\n	return chart;\n}\n\n\n\nfunction nearestValueIndex(values, searchVal) {\n	\"use strict\";\n	var yDistMax = Infinity,\n		index = null;\n	values.forEach(function(d, i) {\n		var delta = Math.abs(searchVal - d);\n		if (delta <= yDistMax) {\n			yDistMax = delta;\n			index = i;\n		}\n	});\n	return index;\n};\n\nfunction clearHighlights(id, singlePoint) {\n	d3.selectAll(\"#\" + id + \" .kf-point.hover\")\n		.classed(\"hover\", false)\n		.transition()\n		.attr('r', function(d, i) {\n			return singlePoint ? 3 : d.size || 0.1\n		});\n};\n\nfunction highlightPoint(id, pointIndex, clearPointIndex, singlePoint) {\n	d3.selectAll(\"#\" + id + \" .kf-point-\" + pointIndex)\n		.classed(\"hover\", true)\n		.transition()\n		.attr('r', 4);\n\n	d3.selectAll(\"#\" + id + \" .kf-point-\" + clearPointIndex)\n		.classed(\"hover\", false)\n		.attr('r', function(d, i) {\n			return singlePoint ? 3 : d.size || 0.1\n		});\n};\n\nfunction NullToZero(n) {\n	if (n === null || n === Infinity || typeof n !== 'number' || isNaN(n)) return 0;\n	return n;\n};\n\nfunction addDays(date, days) {\n	var result = new Date(date);\n	result.setDate(date.getDate() + days);\n	return result;\n};\n\nfunction hexToR(h) {\n	return parseInt((cutHex(h)).substring(0, 2), 16)\n};\n\nfunction hexToG(h) {\n	return parseInt((cutHex(h)).substring(2, 4), 16)\n};\n\nfunction hexToB(h) {\n	return parseInt((cutHex(h)).substring(4, 6), 16)\n};\n\nfunction cutHex(h) {\n	return (h.charAt(0) == \"#\") ? h.substring(1, 7) : h\n};\n\nfunction array_diff(array1, array2) {\n	var difference = $.grep(array1, function(el) {\n		return $.inArray(el, array2) < 0\n	});\n	return difference.concat($.grep(array2, function(el) {\n		return $.inArray(el, array1) < 0\n	}));;\n};\n\nfunction arraysEqual(a1, a2) {\n	return JSON.stringify(a1) == JSON.stringify(a2);\n};\n\n/*\nfunction getOffset(elem) {\n	var offsetLeft = 0;\n	var offsetTop = 0;\n\n	do {\n\n		if (!isNaN(elem.offsetLeft)) {\n			offsetLeft += elem.offsetLeft;\n		}\n		if (!isNaN(elem.offsetTop)) {\n			offsetTop += elem.offsetTop;\n		}\n	} while (elem = elem.offsetParent);\n	return {\n		left: offsetLeft,\n		top: offsetTop\n	};\n}\n*/\n\nfunction getCoords(elem) {\n	var box = elem.getBoundingClientRect();\n\n	var body = document.body;\n	var docEl = document.documentElement;\n\n	var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n	var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n	var clientTop = docEl.clientTop || body.clientTop || 0;\n	var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n	var top = box.top + scrollTop - clientTop;\n	var left = box.left + scrollLeft - clientLeft;\n\n	return {\n		top: Math.round(top),\n		left: Math.round(left)\n	};\n}",
			"file": "comparechart.js",
			"file_size": 44561,
			"file_write_time": 130669235344505918,
			"settings":
			{
				"buffer_size": 42745,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Karl Fredberg/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
			"settings":
			{
				"buffer_size": 30704,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "New Qlik Sense extension released on Qlik Branch: Compare Period Chart\n\n\n \nHi, today I released a first version of a Qlik Sense extension called Compare Period Chart. My ambition is to leverage one of Qlikview/Qlik Sense most powerful features in a more user friendly way, the Set analysis. I want to separate it from the measure as it's own entity, and make it addative. Just like a filter. This is demonstrated in this extension.\n\nCheck out the example app included in the extension!\nhttp://branch.qlik.com/projects/showthread.php?408-Compare-Period-Chart\n\nThis is just the first version and I want to improve this with the help of the community and the developers from Qlik.\n\n\nRoadmap\n\nAxis customization\n\nColor handeling\n\nCustom components for better UX\n\n \n\nBest regards\n\nKarl",
			"settings":
			{
				"buffer_size": 780,
				"line_ending": "Windows",
				"name": "New Qlik Sense extension released on Qlik Branch:"
			}
		},
		{
			"file": "/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/QlikSense.js",
			"settings":
			{
				"buffer_size": 3894268,
				"line_ending": "Windows"
			}
		},
		{
			"file": "components/kfDimNumberFormatter.js",
			"settings":
			{
				"buffer_size": 3703,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "",
			"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFComparePeriodChart/kfcompareperiodchart.css",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"file": "kfcompareperiodchart.js",
			"settings":
			{
				"buffer_size": 40657,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "",
			"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable/com-qliktech-simpletable.qext",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable2/com-qliktech-simpletable2.js",
			"settings":
			{
				"buffer_size": 2583,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable2/com-qliktech-simpletable2.qext",
			"settings":
			{
				"buffer_size": 207,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "",
			"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable2/com-qliktech-simpletable.qext",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"Package Control: Install Package"
			],
			[
				"jav	",
				"Set Syntax: JavaScript"
			],
			[
				"for",
				"Format: Javascript"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 118.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComparePeriodChart/components/kfDimNumberFormatter",
		"/C/Users/Karl Fredberg/AppData/Roaming/Sublime Text 2/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable2/com-qliktech-simpletable2.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable2/simpletable2.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComparePeriodChart/LICENSE - D3 - Copy",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComparePeriodChart/LICENSE - D3",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/src/models/axis.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/QlikSense.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/AngularChart/template.html",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/AngularChart/com-qliktech-angularchart.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/src/models/lineChart.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/src/nv.d3.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/src/interactiveLayer.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/qirby.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/client.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/HorizList/horizlist.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/HorizList/com-qliktech-horizlist.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/src/tooltip.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFComparePeriodChart/kfcompareperiodchart.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFComparePeriodChart/kfcompareperiodchart - Copy.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFComparePeriodChart/comparechart - Copy.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFComparePeriodChart/kf.d3.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/src/models/line.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/examples/lineChart.html",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/nv.d3.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/examples/lineChart.html",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/utils.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/kf.v0.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/examples/line - Copy.html",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/models/scatter.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/components/kf-legend.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/src/models/cumulativeLineChart.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/src/models/linePlusBarChart.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/nvd3-master/src/models/legend.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/components/linechart.js",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/models/line.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Resuable charts/components/legend.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFTable/kftable.js",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/nv.d3.js",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/utils.js",
		"/C/Users/Karl Fredberg/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/core.js",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/tooltip.js",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/intro.js",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/nv.d3.css",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/interactiveLayer.js",
		"/C/Users/Karl Fredberg/Videos/Tutorials/LYNDA_JAVASCRIPT_TEMPLATING_TUTORIAL-kEISO/keiso_jst.nfo",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFComparePeriodChart/components/kfMeasureList.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SetLineChart/setlinechart.js",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/models/legend.js",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/models/pieChart.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFTest/kftest.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFTest/style.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFTest/kftest.qext",
		"/C/Users/Karl Fredberg/Downloads/QlikSense-Ext-VariableButton-master/VariableButton/VariableButton.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/Components/add-dimension-popover.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/Components/add-measure-popover.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/Components/add-measure-popover",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/models/multiBar.js",
		"/C/Users/Karl Fredberg/Downloads/nvd3-master/src/outro.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFTest/wbfolder.wbl",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/com.capventis.DimensionList-master/com.CapVentis.DimensionList.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/HoverDrill/qs-hoverdrill.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFTest/table-template.qext",
		"/C/Users/Karl Fredberg/Downloads/QlikSense-Ext-ParallelCoordinates-master/parallelcoordinates.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/JSPivotTable/JSPivotTable.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFComparePeriodChart/kfcompareperiodchart.qext",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFTable/kftable.qext",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/helpdesk/helpdesk.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFHorizList/filterpane-dimensions.ng.html",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFHorizList/kffilterpane-dimensions.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFHorizList/KFhorizlist.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFHorizList/kffilterpane-sorting.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFHorizList/kfdimensions.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/Components/default properties.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/kfTable/kftable_backup_2014-11-26.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFHorizList/filterpane-dimensions.ng.html.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/filterpane-handler.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/filterpane-properties.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/filterpane.ng.html",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/filterpane-layout.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/filterpane.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/propterties/filterpane-sorting/filterpane-sorting.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/propterties/filterpane-sorting/filterpane-sorting.ng.html",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/directives/collapsed-listbox/collapsed.ng.html",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/filterpane.qext",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/FilterpanExample/directives/collapsed-listbox/collapsed.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFFilterpane/filterpane.qext",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFFilterpane/filterpane.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComponentExample/custom-component-list.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComponentExample/custom-component-list.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComponentExample/custom-component-list.qext",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComponentExample/horizlist.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable/simpletable.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable/com-qliktech-simpletable.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/kfTable/kftable.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/kfTable/kftable.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComponentExample/horizlist.qext",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComponentExample/propterties/filter-dimensions/filter-dimensions.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/kfTable/kftable_backup_orig.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/Components/dimensions.js",
		"/C/Users/Karl Fredberg/Downloads/Adventure Works 2014 Warehouse Script/instawdbdw.sql",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/kfTable/kftable-properties.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/kfTable/wbfolder.wbl",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/kfTable/kftable.qext",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/Items/wbfolder.wbl",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/Items/items.qext",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/LineChart/linechart.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/LineChart/linechart.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/Components/dimensions",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/Components/default properties",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/Components/without uses measures",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/Components/icons",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ToolBar/com-qliktech-toolbar.js",
		"/C/Users/Karl Fredberg/Downloads/LYNDA Data Visualization With D3 JS TUTORIAL-kEISO/05. Using D3 Methods/05_06-Adding a tooltip.mp4",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ScatterPlot/twodimscatter.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/Templates/mashup-template/mashup-template.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SetLineChart/setlinechart.css",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/Templates/mashup-template/mashup-template.html",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/listbox/listbox-template.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/JSPivotTable/pivot.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/chart/charttemplate.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ScatterPlot/twodimscatter.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/Datepicker/KFDatepicker.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SetLineChart/setlinechart.qext",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/LineChart/linechart.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/Templates/chart-template/chart-template.js",
		"/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/QlikSense orig.js"
	],
	"find":
	{
		"height": 98.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"alt+p",
			"\"alt+p",
			"alt+p",
			"a.qDef",
			"qDef.qNumFormat",
			"g\"],function(a,b,c,d,e,f){funct",
			"\"number-formatter\"",
			"number-formatter",
			"number-formatter-dropdown",
			"qFmt",
			"properties.tooltip",
			".tooltip",
			"tooltip",
			"dataPoint.show",
			"dataPoints.show",
			"showDots",
			"measureAxis",
			"extensions.qliktech/linechart",
			"components/chart",
			"line-chart",
			"axis",
			"presentation:",
			"presentation",
			"palette",
			"paletter",
			"colorpicker/colorpicker",
			"color-picker",
			"yTe",
			"qListObjectDef.",
			"qDef.qNumFormat",
			"numFormatFromTemplate",
			"qDef.qNumFormat",
			"qNumFormat",
			"qListObjectDef",
			"qDef.qNumFormat",
			"§",
			"default",
			"dimension",
			"tick",
			"innerHeight/7",
			"Math.flo",
			"Math.flor",
			"innerHeight/12",
			"innerHeight/7",
			"(2)",
			"innerHeight/7",
			"nice",
			"yMar",
			"innerHeight/7",
			"nice",
			"innerHeight/7",
			"tickF",
			"ticksForm",
			"ticks(",
			"nice",
			"innerHeight/7",
			"innerHeight/",
			"scale",
			"tickF",
			"font",
			"tick",
			"line(",
			"line",
			"scale",
			"tick",
			"//",
			"qNumFormat",
			"a.",
			"numFormatting",
			"c.",
			"numberFormattingMode",
			"numFormatting",
			"numberFormattingMode",
			"numberFormattingMode: {\n									type: \"boolean\",\n									component: \"switch\",\n									ref: \"numFormatFromTemplate\",\n									translation: \"properties.numberFormatting.formatting\",\n									defaultValue: !0,\n									options: [{\n										value: !0,\n										translation: \"properties.numberFormatting.simple\"\n									}, {\n										value: !1,\n										translation: \"Common.Custom\"\n									}],\n									show: function(b) {\n										return [\"F\", \"D\", \"TS\", \"T\"].contains(pResolver.getValue(b, \"qNumFormat.qType\"))\n									}\n								},",
			"components/measure",
			"numberformatti",
			"\"general.utils/property-resolver\"",
			"components/number/number",
			"pp-num",
			"axis",
			"formatValue",
			"symbols",
			"tse",
			"selected",
			"defined",
			"rect.resize",
			"console.log(",
			"div",
			"append",
			"d3.",
			"console",
			"selectionsEnabled",
			"selectValues",
			"segment",
			"#f",
			"select",
			"append('g')",
			"wrap",
			"point-wrap",
			"hig",
			"data[0]",
			"attr('r'",
			"sizeValue",
			"clea",
			"highli",
			"singleP",
			"onePo",
			"clear",
			"highlightPoint",
			"clearHighlights",
			"xAxis",
			"offset",
			"console",
			"hover",
			"importan",
			"isInEditMode",
			"editMode",
			"getOffs",
			"getCoor",
			"getCor",
			"tool",
			"getCor",
			"getoffs",
			"getgetoffs",
			"offs",
			"/tooltip/chart-tooltip-service",
			"tooltip",
			"replace"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"a.qListObjectDef.qDef",
			"qDef.qNumberPresentations[0]",
			"dataPoint.show",
			"",
			"qListObjectDef.qDef.qNumberPresentations",
			"qListObjectDef.qDef.qNumFormat",
			"selectionArray0",
			"kf-tooltip",
			"125ms",
			"innerHeight",
			".qv-object-kfcompareperiodchart",
			".kf-",
			"svg",
			"kf-x.kf-axis",
			"kf-y.kf-axis",
			"inner",
			"",
			"sizeValue",
			"kf.",
			"xValue",
			"kf.utils.NullToZero",
			"zScale.",
			"yScale.",
			"xScale.",
			"innerHeight",
			"innerWidth",
			"date",
			"values",
			"date",
			"data",
			"\"dateField.qListObjectDef",
			"kfcompareperiodchart",
			"KFF",
			"KF",
			"",
			".custom-component-list",
			"",
			".qv-object-kftable",
			"kftable",
			"qv-object-setlinechart",
			"datepicker",
			",",
			"f",
			" self.f."
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"settings":
					{
						"buffer_size": 5327,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								5327
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1360.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "comparechart.js",
					"settings":
					{
						"buffer_size": 42745,
						"regions":
						{
						},
						"selection":
						[
							[
								15869,
								15869
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8514.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/Karl Fredberg/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
					"settings":
					{
						"buffer_size": 30704,
						"regions":
						{
						},
						"selection":
						[
							[
								9965,
								9970
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2585.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"settings":
					{
						"buffer_size": 780,
						"regions":
						{
						},
						"selection":
						[
							[
								70,
								0
							]
						],
						"settings":
						{
							"auto_name": "New Qlik Sense extension released on Qlik Branch:",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/Karl Fredberg/Documents/Qlik/Learning/Qlik Sense JS/QlikSense.js",
					"settings":
					{
						"buffer_size": 3894268,
						"regions":
						{
						},
						"selection":
						[
							[
								1751643,
								1752490
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 702741.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "components/kfDimNumberFormatter.js",
					"settings":
					{
						"buffer_size": 3703,
						"regions":
						{
						},
						"selection":
						[
							[
								265,
								265
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 42.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/KFComparePeriodChart/kfcompareperiodchart.css",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "kfcompareperiodchart.js",
					"settings":
					{
						"buffer_size": 40657,
						"regions":
						{
						},
						"selection":
						[
							[
								9692,
								9692
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4711.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable/com-qliktech-simpletable.qext",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable2/com-qliktech-simpletable2.js",
					"settings":
					{
						"buffer_size": 2583,
						"regions":
						{
						},
						"selection":
						[
							[
								1096,
								1141
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 462.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable2/com-qliktech-simpletable2.qext",
					"settings":
					{
						"buffer_size": 207,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/SimpleTable2/com-qliktech-simpletable.qext",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 40.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/C/Users/Karl Fredberg/Documents/Qlik/Sense/Extensions/ComparePeriodChart/compare-period-chart.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
